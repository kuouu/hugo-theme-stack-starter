[{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2024-04-07T00:00:00Z","permalink":"https://demo.stack.jimmycai.com/p/hello2/","title":"Hello World"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/hello-world/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://demo.stack.jimmycai.com/p/hello-world/","title":"Hello World"},{"content":"CMU Cloud Computing 修課心得 在第二學期修了傳說中的 CMU 神課，從以前一直就很好奇到底有多神、神在哪。在確定要修之前也查了蠻多人的修課心得，回饋主要分為兩派\n支持派：學到很多、業界實用性很高 反對派：學得太雜太淺、花太多時間做繁瑣的工作 但 SV 校區能修的好課也不多，因此最後還是決定修了。\n評分標準 詳細課程大綱\nType Number Weight Content Checkpoint Quizzes 10 out of 11 20% Projects 15-319 5 out of 6 for 15-319 80% Projects 15-619 5 out of 6 + Team for 15-619 60% + 20% Total Grade 100% 15-319 是大學部的課程， 15-619 則是研究所版本，差別僅在於 team project 以及學分數，而 MSSE 這個 Program 可以接受我們修大學部的版本。此外，這堂課的 workload 會因 team project 而變大許多，如果不打算花太多時間在修課方面，修 undergrad 是完全 ok 的。\n教學方式 我覺得這堂課的授課方式對我來說真的是太新奇了，因此完全值得特別提出來講。這堂課程是完全遠端的，地理範圍橫跨 4 個校區（Pittsburgh, Sillicon Valley, Qatar, Rwanda），修課學生有兩百多人，助教共 16 位。沒有特定的上課時間，給予學生在時間上很大的彈性，學習方式主要是透過做 project，基本上照著提供的 writeup 就可以完成（但通常非常長）。\n因為涉及很多不同的領域，對於沒有基礎的人會提供 primer 讓你熟悉基礎知識，但我認為這也是讓人詬病的地方。primer 通常都講得很淺，看完也不一定會，通常還是要做完 project 才會有點概念這個工具到底在幹嘛。project 則是會給你 starter code，避免你花太多時間在一些小細節上，這個做法同時也讓整個 project 變成很像是填空題的形式，有很多細節必須自己花時間去深入了解。\nIndividual Project project 主要使用 Java 跟 Python，不會也沒什麼關係，跟上面說的一樣主要是填空，程式邏輯跟該 project 相關的知識點才是做不做得出來的關鍵。\n[p0] Getting Started with Cloud Computing - Data Analytics using a Wikipedia Dataset 不算分。讓學生熟悉整個 project 的繳交流程，以及 cloud 的基礎操作。大致上分成幾個部分：\n用 GUI console 在 AWS, GCP, Azure 創建資源，並且登入部署基本的網站 用 terraform 創建資源 用 Java 做資料前處理以及基本的單元測試＆測試驅動開發 用 python / pandas / jupyter notebook 做資料分析 用 grep / awk 做資料分析 [p1] Elasticity - Horizontal Scaling and Advanced Resource Scaling 三個 task：\n用 python 或 java 做 ec2 的水平擴充 根據 loading 做到 auto scaling 改成用 terraform 做 如同上圖所示，如果機器開太少讓他超載，就會導致有些請求沒有辦法被處理，但開太多又會讓算力被閒置，換句話說就是浪費錢。這個作業就是在練習達到某個平衡，他要你能夠處理高峰時期的請求，同時又不能開太多機器，並且要維持一定的服務水平，評分依據如下：\nPerformance Target Threshold Score Calculation Score Instance Hours 220 \u0026lt;= x \u0026lt;= 280 $score_{ih} = (280 - x) * 100 / (280 - 220)$ $min(score_{ih}, 100)$ Average RPS 7 \u0026lt;= x \u0026lt;= 12 $score_{avgrps} = (x - 7) * 100 / (12 - 7)$ $min(score_{avgrps}, 100)$ Max RPS x \u0026lt; 35 $score_{maxrps} = -5$ $min(score_{maxrps}, 0)$ $$ Total\\ score = \\frac{(score_{ih} + score_{avgrps}) \\times 40}{2 \\times 100} + score_{maxrps} $$\n這次比較蠻麻煩的點是 task 2 每提交一次，就要等約 50 分鐘才會有結果（當然如果覺得有問題也可以自己提前結束）。\n[p2] Containers: Docker and Kubernetes - Linux Containers 使用 Docker 將服務容器化，並且部署到 Google Kubernetes Engine (GKE) 跟 Azure Kubernetes Service (AKS) 上，最後還要做 CI/CD 將整個流程自動化。這個 project 說大不大說小不小，全部做完花的時間並沒有很多，但是對這個主題有興趣的人，可以花很多時間在他的細節上。舉例來說，我們要容器化的服務是用 Java Spring Boot 寫的，其中還有用到 Redis Pub/Sub、STOMP 之類的技術，以及這個 micro-service 的架構是基於什麼理由選擇的，這些都蠻值得花時間去探討。\n我做完這個 project 之後馬上把它寫到履歷上，後來就拿到了兩個相關的面試，代表這些技術還算是當前蠻熱門的。\n[P3.1] Cloud Storage - SQL and NoSQL note: P3.1 跟 P3.2 都只有一個禮拜能做，但內容都不多（又或者是說很水）\n對於 SQL 跟 NoSQL 的小練習，分別使用 MySQL、MongoDB 跟 Redis。基本上指令都給好了，真正要想的地方很少，無腦就可以做完。\n[P3.2] Cloud Storage - Heterogeneous Storage on the Cloud 部屬一個類似臉書的應用程式，其中的不同資料分別會用到不同種類的資料庫，最後還會把他串起來，成品大概長這樣：\n其實我覺得主題還挺有意思的，現在的網站真的都是資訊爆量的狀況，對於不同的資料都有適合的存儲方式，如果有遵守最佳實踐的話，小小一個請求可能會像扇形那樣擴展開來，像後端的不同微服務去做連結。\n但其實這個 project 的工作量跟 P3.1 差不多，如果有興趣的話還是得要自己去深入研究。\n[P4] Iterative Processing with Spark 學期後半來到了資料處理的部分，這個 project 是將簡化的推特資料處理過後做成 PageRank 的推薦系統，強制使用 spark + scala 來做。資料總共 10G，這裡使用 Azure 的 HDInsight 來開集群，一小時就要花 3 美金。\n我認為算是在這邊學到蠻多的，畢竟之前處理資料的時候就是寫一個 python 然後讓他在那邊跑，從來沒有想過也可以用分散式運算來加速整個過程。這個工具除了介面有點舊之外，整體算是非常的完善。此外，這邊會跟小考那邊的閱讀部分關聯性蠻大的，有些背景知識我沒有好好去讀，在實際遇到問題的時候真的完全不知道該怎麼解決。\n然後這個 project 的 writeup 問題十分之多，讓我花很多時間在根本不應該花時間的地方，我真是謝：）\n[Make-up] Functions as a Service 學期間突然出現的一個補救方案，教無伺服器運算，但我因為太忙 drop 掉了\n[P5] Stream Processing with Kafka and Samza 因為太忙 drop 掉了\n[P6] Machine Learning on the Cloud 做了一個紐約市叫車價格預測 app，用 Google 的 Vertex AI 來做機器學習，使用 XGBoost 這個模型。雖然我大學有修過機器學習，但我幾乎都還給教授了。這裡也沒有很多的著墨，starter code 裡面已經完成了大部分，我們幾乎就是負責調參。我覺得算是對於現在大型的機器學習模型該如何訓練跟部署在雲端也是有點概念，但也僅止於淺嚐而已。\nReading \u0026amp; Quiz 每週一次小考，在時間範圍內自己決定時間考，開始之後倒數計時兩小時寫。每次小考約有 10~20 篇的文章要讀，掃過大概要花 1~2 小時。主題很廣，跟 project 有一點點關聯，但也沒有說不會就做不出來。小考也不會難到很誇張，但是如果想要拿滿分的話，之前沒有學過相關內容的話，會需要蠻多時間消化的。\n比較好的做法是每天看一點，嘗試完全理解閱讀內容，照理來說小考不會是問題。但我是沒有認識的人這樣真的做啦：）\n內容包含：\nIntroduction to Cloud Computing Cloud Computing Overview Economics, Benefits, Risks, Challenges and Solutions Cloud Infrastructure Data Center Trends Data Center Components Cloud Management Cloud Software Deployment Considerations Cloud Storage Cloud Storage Case Studies: Distributed File Systems Case Studies: NoSQL Databases Case Studies: Cloud Object Storage Distributed Programming and Analytics Engines for the Cloud Introduction to Distributed Programming for the Cloud Distributed Analytics Engines for the Cloud: MapReduce Distributed Analytics Engines for the Cloud: Spark Distributed Analytics Engines for the Cloud: GraphLab Message Queues and Stream Processing Virtualizing Resources for the Cloud Introduction and Motivation Virtualization Resource Virtualization - CPU Resource Virtualization - Memory Resource Virtualization – I/O Case Study Storage and Network Virtualization Team Project: High Performance Web Service Phase 1 總共要做 3 個 web service，分別是：\nblockchain QRcode Recommendation System 三個其實沒有什麼關聯，但在 Phase 2 跟 Phase 3 live test 的時候會同時向三個服務發送請求，在這個階段就是讓服務能夠正確跑起來，並且在預算內達到一定的 Request Per Second (RPS)。\n這個階段比較像是讓我們去測哪個 web framework 跟 programming language 比較快，還有把整個服務串起來而已。\nPhase 2 第二階段對於 twitter service 的要求會再提高，並且加入了 live test。所謂 live test 就是老師會在同一時段向所有組別的服務發送請求，然後如果你在這個時段服務爆了，或是出任何問題的話，就直接會反映在你的成績上。然後這邊每小時的預算也要算好，如果在 live test 上每個小時花超過 0.7 鎂就會依比例扣分。\nPhase 3 第三階段則是讓我們測試更現代化的部屬方式，我們從原先用 kops 轉換到 EKS 上，儲存方式也從自己部署 mysql 變成 AWS 上的各種資料儲存服務。\n隊友 其實我覺得 team project 的體驗很大程度在於隊友上，我覺得我算是被 carry 的那個，雖然最後沒有拿下榜一，但也算是排名靠很前面了，況且在 Phase 1 我們進度幾乎是領先所有隊伍好幾個禮拜，學期中也收到了下學期的 TA 面試邀請。我也有聽說其他組不太好的狀況，像什麼消失的拉，去寫其他作業的拉。\n期末問卷有問到「如果重來你會怎麼選擇隊員」，其實我到現在也很難給出一個明確的答案。學期初教授其實有發信說不推薦跟認識的人，似乎以歷屆的數據來說，這種組隊方式狀況都會不太好。我自己這個組算是亂找的，因為我原本是想跟認識的人一起，但後來出了一些誤會導致我必須另尋組員。就我的結果來說還算不錯，只是我真的很難去下結論說跟熟人組隊就會比較不好。\n其他 TA 我有個同屆的台灣同學因為第一學期就跑去修 CC，所以我修這堂課的這學期就一直狂問他。根據他的描述，其實 TA 也並不會對整個課程了解透徹，他是跟我說他在 Office Hour 的時候也是看著他去年的作業在回答的，每個 TA 都有負責的 project，你可能只會對那個 project 特別熟。\n然後這個 TA 的工作量好像特別大，他每週好像都會報滿 20 個小時（國際學生兼職時數上限），學生又超多，問問題的論壇常常都是爆滿的狀況，然後有些問題水平我看了也覺得這些人到底怎麼上 CMU 的＝＝，好處就是可以認識 SCS 學院的教授，還有一些主校區的神人同學。\nSail() \u0026amp; OLI platform 學期末有一個超長的問卷是針對課程內容以及這兩個平台去做詢問的，Sail() 是做 project 的網站， OLI 則是閱讀跟小考。好像這堂課的授課方式會這麼特別就是因為這算是一個電腦科學教育方面的研究吧，而這兩個平台就是輔助的工具，說不定之後會上市之類的，但我個人是認為以學生視角來說這兩個平台並沒有特別突出的點。\n參考資料 CMU 的 M.S. Software Engineering 第二學期心得 CMU的Cloud Computing這堂課 在CMU学习15319/619 Cloud Computing是种怎样的体验？ ","date":"2024-05-06T00:00:00Z","image":"https://hackmd.io/_uploads/BkeM-EIfR.jpg","permalink":"https://demo.stack.jimmycai.com/p/cmucc/","title":"CMU Cloud Computing 修課心得"},{"content":"CMU-SV MSSE 第二學期心得 寒假回台灣了，大約在十二月中到一月中回台灣耍廢了一個月。\n也因為第一學期沒有找到實習，因此我希望將第二學期的重點擺在找工作，並且考慮到以下幾點：\n我感覺自己目前有的技能有點難找到，因此希望透過修課能多學一些熱門的技術 第一學期 FSE 其實並沒有想像中累，每週工作量可以再預估多一點 履歷已經改到沒東西寫了，最好可以加一點東西 SV 校區的修課選項真的不多，而且 CMU 其實雷課也不少，避免踩雷我決定修了一堂傳說中的神課 CC。春季其實還有一堂蠻多人推的 14-736 Distributed Systems，但因為一些原因我後來沒修，聽說作業也會花蠻多時間寫的（我一位同時修 CC 以及 DS 的同學表示：千萬不要搞自己）\n修課 Cloud Computing 總之就是學各種跟 AWS、GCP、Azure 相關的技能，因為這堂課太有名了因此另外幫他獨立寫了一篇。\nFoundation of Database Design 不知道主視覺是誰設計的，蠻好看的哈哈\n這堂課在教資料庫設計，課堂內容大概是參考 sqlite 跟 15-445/645 Intro to Database Systems 來的，使用 C++。作業有 3 個，小組作業 1 份，加上 2 個很小的 lab。\n我大概到第三第四週就開始不知道在幹嘛了吧，拜 ChatGPT 所賜作業都還是寫得出來，但也因此學到的並不是很多，每週花不超過 10 小時。因為是剛開的課很多東西都不太完整，\u0026ldquo;聽說\u0026quot;作業 2 甚至是因為教授收的 RA 來不及出而延後了很久，學期後面上課學生出席率應該不到 40%。\nHow to Write Fast Code II 主校區廣播過來的遠距課，主要是教 OpenMP 跟 Cuda，聽說是 15-418 Parallel Computing 的低配版。作業 4 個，小組作業 1 個，學期中後段讀了 7 篇有關高性能運算的 paper，如果想要爭取上課參與分數可以自己報名去報 paper。\n沒錯，這堂課有上課參與分數，而且老師很喜歡一直問大家的意見，如果沒有人理他他就在那邊跟大家僵持不下，然後不錄影，上課沒去就沒了（雖然去了也不知道他在講什麼）。\n前面 OpenMP 的部分還算簡單，但後面 GPU 那邊會用到一些 Fast Code I 跟一些計算機很底層的內容，如果自己沒有相關知識幾乎就聽不懂了。我的組員有一位有上過 Fast Code I，每週 Office Hour 幾乎都會去跟教授交流，但我看他後面也是不知道在幹嘛，所以如果有想選這系列課程的請想清楚：）\n我印象蠻深刻的一點是老師學期初有說：「我們要 parallelize code，而不是 paralyze code」，我當初一直覺得這個冷笑話很難笑，但到學期末的時候才發現他不是在說笑，而是真的常常反而改一改變更慢\n總體來說，我覺得如果有花時間在上面還是有些收穫的，推薦給對 High Performance Computing 有興趣，會自己去查相關資料，然後喜歡跟教授喇賽的人修。\n（TA）Software Engineering Methods 我在第一學期結束之前其實一直就有在想要不要當助教，主要是因為：\n來這邊幾乎沒講到英文，感覺當助教會需要跟教授還有學生做很多互動 想要多水一點工作經驗，而且這是美國當地的 辦 ssn 賺點錢，就算是最低時薪至少可以 cover 大部分的房租 學期結束那陣子 Cecile 就有寄信給大家問有沒有人要當 FSE 跟這堂課的 TA，FSE 的部分有上過就大概知道要幹嘛，我也問了我們組的 TA，他本人是跟我說不推。另外就是這堂課了，因為這堂課只開在春季班，所以我也沒有上過，但以 Cecile 信中的描述感覺我的背景挺適合的，抱著問了沒損失的心態我就寄了信給教授，他隔天回信說跟我歷年來很少有 TA 上過這堂課，並且他看了一下我的履歷還有我在 FSE 的 commit 還有 PR review，覺得很適合，就直接收我了，唯一需要注意的點就是如果當助教的話就不能修這堂課。\n這堂課主要內容在教大型軟體團隊的開發方法，像是 LeSS、DAD、SAFe，而程式部分則是老師會決定一個 Web App 的主題來讓大家一起開發，而我這一屆是 Instant Response。基本上除了前端使用 React.js 之外，其他內容都跟 FSE 一樣，其實幾乎所有東西都是可以全班一起討論決定的，包含要用哪種開發方法，以及要用什麼技術棧。雖看似自由，但因這堂課是 core，想划水的人有很多，想要嘗試一些特別的東西必須要先說服其他人，如果要花很多時間去學的話就很容易被大家否決。當然可以自幹，只是除了每個 sprint 都不長之外，還有一些必須要完成的 feature，如果還有修其他課的話真的不會想多花時間在上面。\n這堂課會推薦給只想寫 Web 前後端，或是很想認識人的人，因為除了小組之外也會有很多跨組的討論。大概學期中就幾乎沒什麼上課了吧，期末一半以上都有 A，沒有期末考，但我看他們每週好像都花蠻多時間在上面的。\n至於助教主要內容就是他們學期初的 recitation，教大家 typescript, react, redux, storybook，還有看教授叫你幹嘛就幹嘛，每週工作時數平均下來絕對 \u0026lt; 10，如果只是當打工完全 ok\n選課心得 選到第二次課，總結一下個人的 CMU 選課心得：\n新生優先權最低，來的第一學期可能不能期望修到什麼好課 個人推薦可以每個學期選兩堂必修＋一堂選修 很多課都會希望先修過 FCS，如果沒有特別的想法第一學期可以考慮修一下，而且很多人都是第一學期修，大家可以一起討論 如果很在意找工可以先修 CC，他會一次教很多業界現正熱門的技術，如果想要跟大家一起討論可以在春季修 剛入學 advisor 會一直恐嚇你說 FSE、FCS、CC 這三堂課中，不要在同一學期修任意兩堂。但我覺得其實也沒有那麼嚴重 除非可能影響到畢業，不然儘量不要選自己沒興趣的課，除了浪費學費之外（一堂課約台幣二十萬），還會浪費很多時間在上面 如果是 SV 校區其他 program 的學生，我個人是完全不推薦修 SE 的必修課程。第一是這是我們的畢業條件，我們真的很需要趕緊將它處理完，第二是這些課程品質真的沒有好到值得跟我們搶，好課請選主校區廣播過來的 找工 找實習部分另外獨立出來一篇了。\n以秋季班台灣人來說上岸率為 3/5，整個學校體感大概只有一半找到實習吧，最近真的很慘，不推薦沒有工作經驗的人來。\n國際學生春季班入學應該是不能實習的，但我們這邊有一位秋季先到 USC，春季再來 CMU SV 的神人上 Google Intern，詳情請見他的 medium 文章。\n旅遊 自由女神在一個要搭船去的小島上，而我在搭船的時候收到 offer，我很高興的跑到我朋友旁邊跟他們說「我還沒上岸就上岸了」\n春假跑到紐約去玩了六天，算是出國之後第一次認真出去旅遊，不然真的每天都是寫作業跟找工作QQ\n心得就是：紐約好髒、好貴、好無聊，我甚至在美術館睡著＝＝\n但回來之後意外發現，因為很多電影跟連續劇的背景都是在紐約，在去過之後會對於劇情更有帶入感，這麼想也算是值回票價了吧：）\n時代廣場 aka 廣告廣場，我真的超討厭廣告，真的不能理解這種塞滿廣告的地方也能成為一個景點？_？\n外部連結 CIT \u0026amp; SCS Masters Internships 下方 program 欄位可以只選擇 Software Engineering，就可以看到 MSSE 的實習找工狀況（只有有回報的人的資料） ","date":"2024-05-05T00:00:00Z","image":"https://hackmd.io/_uploads/H1RjDbrM0.jpg","permalink":"https://demo.stack.jimmycai.com/p/cmusv-semester-2/","title":"CMU-SV MSSE 第二學期心得"},{"content":"CMU-SV MSSE 第一學期心得 Program 簡介 program 全名為 Master of Science in Software Engineering，找工向 program，16 個月畢業，如果是春季入學的話不能實習，除非你先去其他學校半個學期\n在收人方面我感覺托福 95+ 應該就夠了，背景我猜是看工作經歷，然後如果有網頁開發感覺更好（畢竟這邊必修主要都教這個），但也是有部分人沒有工作經驗。另外轉碼感覺也蠻友好的，很多大學都不是 CS 畢業的\nMSSE 畢業所需學分數為 97，但每學期至少修滿 36 學分（== 3堂課），且每學期至多能選一堂遠距課程。（第一學期有一堂一學分的必修課叫做 intro to grad study）\n必修課總共有八堂，畢業條件是五堂，其中一堂可以用跟教授做 research 來抵免，或是有什麼特殊原因可以用其他選修來抵（需要提交申請，但聽說通常不會過）\n三堂選修課可以選主校區的課，但選擇不多，如果很在意課程品質來這裡可能會很失望。\n老師大概是上面這四位，其中 H 老師好像是這個 program 的老大的樣子吧，但他本人在匹茲堡校區。選課跟 research 的話大家都會推 Leo\n（第二學期的我：SV 校區的課還是不要抱太大的期望🥲）\n選課 18-652 Foundation of Software Engineering 這個 program 的必修中的必修，一定要在第一學期修完，不然很多必修都會擋這堂課。\n基本上只有 SE 的學生選得到這堂課，但我覺得其他 program 應該也不會想修這堂課：）\nSyllabus https://docs.google.com/document/d/1en0Hlw9SL1zkjHdfYg3ewvW-xFNuyUzaTQ5bUlDYNAM/preview\nGrading Rubric Component Performance Criterion Weight (%) Final Quiz Individual 20 Pre-enrollment Assignment Individual 5 Readiness Quizzes (Post-prep quizzes and In-class Q\u0026amp;As) Individual 10 Collaboration Skills Training Individual 5 SE Project Iteration 4 Individual 15 SE Project Iterations 0, 1, and 2* Team 15 SE Project Iterations 3 and 5* Team 15 SE Project Presentation Team 10 Show-and-Tell Presentation Team 5 Total - 100 Total with bonus points (max. 3 points) (awarded in general for exceptional class participation at the discretion of the faculty) - 103 課程內容 Software development methods Object-oriented technology Object-oriented analysis and design Requirements Software architecture Design patterns Software testing Technical development practices Code quality: code reviews and static analysis Software project planning and estimation 課程內容為所有跟軟體工程相關的知識，包含開發方法（scrum, kanban）、軟體架構、設計模式、軟體測試、品質管理\u0026hellip;等，每個知識點都不會到太深。\n上課的方式是先在家看預錄的影片（通常不超過半小時，目測大概是三到五年前錄的），看之前有個 pre-quiz 讓你對於接下來會講的內容有點概念，看完之後有個 post-quiz 驗收，並且會算到成績裡面。上課也會有課堂小考，並且針對影片內容做更深入的討論，但大部分的時間會做跟 group project 相關的活動與討論。\nGroup Project 課程透過網頁前後端開發來實踐上課的內容，技術規定後端使用 express.js，前端 \u0026ldquo;不能\u0026rdquo; 使用任何開發框架（React/Vue/Angular），其餘都可以自己決定。這個專案會有大約 4~5 人的團隊下去進行，是由老師透過一個小調查來隨機分組，每週都會跟 TA (scrum master) 有一個 meeting，個人覺得進度蠻緊湊，常聽說有組別會為了趕 deadline 而熬夜。\n每次 iteration 都有約兩到三個 use case 要去做，時長大約是兩個禮拜。mid-iteration會驗收跟文件比較相關的內容（OOAD、RESTAPI 文件、流程圖），end-iteration 則是看 demo。每次 iteration 都會多加一些額外的需求，像是要加入單元測試、加入 CI/CD、使用第三方靜態分析工具並提升品質到多少等。\n第四次迭代會需要每人自己提出要做的功能，而且內容必須包含前後端、CRUD 四種操作、要有兩個以上使用者的互動，所以不能說你在整個學期都只會做某方面的事情而已。第五次迭代則是要重構並且整合第四次迭代的所有功能，還有其中一個 use case 讓蠻多組別整個程式碼大重寫 \u0026ndash; 允許使用者更改使用者 id。因為很多人直接用使用者 id 來當作資料庫的 row unique id，在前四次迭代因為他的確是獨一無二的，因此都完全沒問題，但第五次迭代加入這個功能之後，除了要大改資料庫之外，因為到這個階段程式碼也不少了，常常牽一髮動全身，因此最後聽說蠻多組別在熬夜的。\n心得 常聽到有人抱怨說這堂課沒什麼用，但卻要花很多時間。但我認為這堂課名畢竟叫做「軟體工程」而非「網頁開發」，核心還是這些軟體工程相關的知識。這也反映到這個 program 比較偏找工向的特色，課程並非是這個 program 的重點（雖然依舊有一些主校區的神課可以選），如果想要在這裡學到一些硬知識底子還是有點困難的。\n此外，學期初的分組將會決定這整個學期的學習體驗，有看到有些組別好到不行，也有吵架翻臉的。然後學期初的調查可以把自己寫的爛一點，可能比較容易配到大神（？\n18-654 Software Testing and Verification Grading Algorithm 15% Project 1 15% Labs 30% Assignments 15% Midterm Exam 15% Final Exam 10% Participation 100% TOTAL 心得 前半段教各式軟體測試方法，後半段教軟體驗證。主要使用 Java，軟體驗證用到 spin / promela。\n兩次作業四次 Lab，Lab 允許兩個人一起寫。學期中還有一個大 project，是用課上教的方法應用在開源的專案上。如果 project 沒有堆到最後才在做的話，這堂課的作業應該都不會花到太多時間。\n上課方式就是普通的講課，老師在主校區所以是用遠端連線的，沒來不會給 Zoom 連結，但也不點名。老師會很期待大家跟他互動，只是他講得沒有什麼起伏，大家也不知道聽不聽得懂，所以通常不太會有人理他😂\n期中期末考試前老師會給考古，基本上做到熟就能拿到蠻高的分數，如果能透徹理解拿滿應該是沒問題的，班上平均應該有 90% 以上吧，認識的人都拿Ａ（學期成績 90+）。\n我自己認為教的主題都還蠻有趣的，課程規劃的也很好。但我感覺課程的教材好像很久沒有更新了，promela 也不知道有沒有人在用，常常會有在用上古時期的工具的感覺。另外，因為作業比較偏向 Lab 的形式，個人覺得學得雖廣但有點淺。\n18-656 Functional Programming in Practice 學期前半介紹 functional programming 的基本概念跟 F# 基礎語法，接著兩週的 Domain Driven Design 工作坊做後續期末 project 的系統設計，後面是比較進階的的概念（ex: railway oriented programming, map reduce）\n期末 project 是做一個加密貨幣套利的系統，全部都必須使用 F#，並且完全遵照 functional programming 的規範。後期會跟一些 Azure 的服務做串接，另外還有一些加分的串接項目（ex: 使用 Azure HDInsight、把系統做成分散式運算、部署）。\n好像很多人聽到加密貨幣就覺得很潮，但除了 App 場景應用在加密貨幣上之外，其他完全沒有關聯。\n對於微軟的開發生態系不熟悉的人在這邊可能會有點吃力，而且學了一個 F# 還真的不知道要幹嘛，到底有誰在用這個＝＝？此外，我也真的聽不太懂這個老師上課到底在教什麼，有可能是我英文太差的問題，但好像也蠻多人反映聽不懂的。\n前半學期我除了上課之外鮮少會再額外花時間，所以我常常推坑別人說這堂很水。但後期做 project 又突然變得超肝，老師也有注意到這個問題，一直把作業需求改低，最後甚至還有因為測試的 API 老師那邊來不及開發所以不測的。因為是第一個學期開，所以發生這些還蠻可以理解的，後續就不知道會改成怎樣了。\n生活 校園 SV 校區在 mountain view 的 NASA 園區，建築主要只有一棟樓，資源不多但其實學生也不多，會議室幾乎都借得到，自習的話這棟樓各個有桌椅的地方都還蠻合適的。此外還有咖啡機、冰箱、微波爐、各式餐具，如果找得到球友的話還有提供網球、籃球跟橄欖球可以到旁邊玩。但沒有圖書館、沒有餐廳。\n裡面的學生來自三個 master program \u0026ndash; ECE SE, III SM, INI MITE，主要都是中國人跟亞洲人。\n職涯服務 可以用學校的 Handshake 平台來預約，職涯顧問人很好很有耐心，但我覺得效果還是蠻有限的，如果完全沒有方向或是當作練英文還蠻合適的，也幾乎都預約的到。\n此外，還有一個叫做 Peer Career Consultant（PCP）的學校組織，他們算是領時薪的學生，如果沒有同儕能幫忙互相看可以去找他們，而且他們常常就坐在大廳等人去問。\n職涯中心除了舉辦 Career Fair 之外，也會常常邀請校友來跟大家介紹自己的公司或一些求職技巧，但這就比較憑個人本事了，目前我認識的人當中還沒有聽到有人因此拿到面試的。\n外部連結 學校資訊 CMU ECE MS Handbook（每年都會更新） MS-SE Program Orientation ECE Grad Program Overview 相關社團 CMU TSS in Bay Area TSS in Pittsburgh 課程資訊 CMU Schedule Of Classes Discord | @TurtleBot CMU Courses CMUSV 個別課程心得 其他參考資料 CMUSV TSS Handbook (2023) 进可攻退可守的找工神校：CMU-SV MSSE 第一学期体验 (2021) CMU-SE-SV 就读体验及选课分享。很高兴可以看到，这里变得越来越好 (2021) yet another CMU-SV-SE一年半的感受/选课/排雷 (2021) CMU SE SV劝退指南 - 纠结中的新生必看 (2021) CMU SESV劝退贴【续】 (2020) CMU SESV 入学感受+劝退指南 匹茲堡生存手冊 ","date":"2023-12-25T00:00:00Z","image":"https://upload.wikimedia.org/wikipedia/commons/d/d4/Carnegie_Mellon_West_Building_23_Front_Entrance.jpg","permalink":"https://demo.stack.jimmycai.com/p/cmusv-semester-1/","title":"CMU-SV MSSE 第一學期心得"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"https://demo.stack.jimmycai.com/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/image-gallery/2_hubce42636ecacc1a380b462f3110efcec_37455_120x120_fill_q75_box_smart1.jpg","permalink":"https://demo.stack.jimmycai.com/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/shortcodes/cover_huec3c3e34981507583e214021ad1b9a4b_12942_120x120_fill_q75_box_smart1.jpg","permalink":"https://demo.stack.jimmycai.com/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi),e^{2 \\pi i \\xi x},d\\xi $$\n1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"https://demo.stack.jimmycai.com/p/math-typesetting/","title":"Math Typesetting"},{"content":"21 days of effective communication Day 1: Listen Use non-intrusive verbal and non-verbal signals to encourage them to keep talking If you are dealing with an angry or frustrated individual, they won’t be able to think clearly until they have offloaded everything that’s on their mind\nLet them keep going until they run out of steam Do not play the role of armchair psychologist We all like to come up with our own theories about why. But analyze on your own time.\nDo not interrupt with unsolicited advice No one is obliged to follow your recommendations. Put your ego to one side. Once you have contributed, it’s up to the other person to strategize their next move.\nRe-phrase someone else’s words, but don’t parrot them back Check your assumptions, do not project your own feelings onto someone else. 🏋️ Practice\nphone a friend or relative you haven’t seen or spoken to in a while, and then use the conversation as an opportunity to practice your active listening skills.\nDay 2: Count The Number Of Times You Interrupt Other People By your interruption, you’re insinuating that your thoughts and ideas are more important than theirs.\nSet targets and give yourself rewards Stick up signs Write down any points you want to make in advance Remember that your silence is just as influential as your voice Practice biting your tongue 🏋️ Practice\nCount how many times you interrupt other people in all your conversations, and then use the tips above to stop yourself. Ideally, you should try to talk with at least three people. If you can do this while in a group, even better.\nDay 3: Become An Inclusive Communicator Don’t emphasize a characteristic if it isn’t necessary to do so Don’t assume a person’s gender or sexual orientation ex: 使用「伴侶、另一半」而不是「男 / 女友」\nIf you need to talk about someone’s disability, do so in neutral terms Focus on a person, not any disabilities they might have Do not uphold stereotypes ex: 亞洲人數學很好、非洲人很會饒舌\nShow respect for race and ethnicity through proper capitalization in written communication Be mindful of context ex: queer, nigger\nAvoid patronizing individuals or groups of people ex: 說身體有殘疾的人很勇敢勵志，只因為他們完成了日常工作\n🏋️ Practice I\nThe next time you take part in a conversation that includes a discussion about other people, consider whether your choice of words is respectful. Could you be a more inclusive communicator? If applicable, make a note of where and how you could improve next time around.\n🏋️ Practice II\nSwitch on the TV (or go on YouTube) and find a show that features a lot of dialogue. Watch it for 15-20 minutes. Are the people taking part in the conversation upholding any negative views or beliefs about particular groups? Do you hear similar language in your everyday interactions? If so, how could you challenge it?\nDay 4: How To Expand Your Vocabulary A strong vocabulary is the best foundation for communication, and communication is the starting point for success. When you have more words at your disposal, you are in a better position to deliver exactly the right message.\nUse a new word every day Use apps and online games to expand your vocabulary Become a word enthusiast Read widely If you aren’t sure what a word means, ask. 🏋️ Practice I\nToday I want you to learn five new words, and then incorporate them into your spoken or written communication.\n🏋️ Practice II\nTake a look at the apps and websites mentioned in this chapter and commit to using one of them for at least five minutes each day for a week.\nDay 5: Swap “But” For “And,” \u0026amp; Embrace “Yet” “But” statement is unnecessarily limiting and negative “But” can also make people defensive Simply putting “yet” on the end of a negative statement can transform its meaning. 我沒辦法交到女朋友 → 我現在還沒辦法交到女朋友 我不會寫程式 → 我現在還不會寫程式\n🏋️ Practice I\nWhenever you catch yourself making a negative statement that includes the word “but”, substitute “and” instead. Don’t be surprised if your optimism turns out to be contagious.\n🏋️ Practice II\nGo on a “Yet Hunt”. Whenever you make a negative statement or bemoan that you are lacking some kind of resource, stick a “yet” on the end.\nDay 9: Stop Trying To Score Points Sometimes, it’s more important to be happy than it is to be right. Point scoring rarely works. If you crave the excitement of a fiery argument, join a philosophy discussion group or debating society. 🏋️ Practice\nToday, you are going to let other people be wrong. This exercise will show you that the world doesn’t cave in when other people see things in a different way.\nDay 10: Ask Questions That Get Results Day 11: Refine Your Voice \u0026amp; Speaking Style Lower the pitch of your voice Use vocal exercises to develop a smoother voice Cut out any verbal tics Stick to short sentences and choose short words where possible. Master the art of the pause Vary the pitch and tone of your voice 🏋️ Practice I\nFind an article or book and read it aloud for a minute. Record yourself speaking, then listen to it. Pay attention to your volume and pitch. Appraise your voice. Do you speak softly, loudly, or somewhere in between? Are you high-pitched, low-pitched, or “average”? Using your recorder, experiment until you know how it feels to speak in a steady, even voice at a relatively low pitch. Try the vocal exercises outlined above.\n🏋️ Practice II\nThe second challenge is to practice speaking in a different tone of voice when in conversation. If you already know the other person, don’t change your tone completely - they will just want to know why you suddenly sound completely different. Most of us can’t help but respond differently to voices of varying pitches and inflections. You may be surprised at how everyone around you reacts.\nDay 12: Focus On Behavior, Not Character Stick to the facts Focus on what you want, why you need it, and the time frame in which you expect it to happen 🏋️ Practice Today, you are going to have a conversation with someone who has recently hurt or inconvenienced you\nDay 13: Uncover Your Communication Background We are wired to imitate our parents, (or whoever was in charge of our well-being), because they were our first role models Did my parents have solid social skills? Did my parents have friends? Did my parents pass on any “rules” when it came to communication or relationships? Did my parents show me how to make up after an argument, or settle a difference of opinion? Did my parents encourage me to express myself? → Use new behavioral models\n🏋️ Practice\nTake a piece of paper and divide it into two columns. At the top of each, write down the name of your two most important caregivers from early childhood.\nNow, think about their communication styles. What did you learn from each of these individuals? Write down the beliefs they passed on to you. Do you want to hold on to these beliefs, or is it time to swap them for better, healthier ways of communicating?\nDay 14: Understand How Different Generations Communicate Baby Boomers (Born between 1946-1964) Generation X (Born between 1965-1980) more likely to prioritize a work-life balance, and to value independence respect leaders who use a confrontational management style lifelong learners Generation Y (Born between 1981-1997) they are happier to multitask, to get involved with multiple projects, and to take a flexible approach to work accustomed to digital rather than in person communication likes to have answers quickly Generation Z (Born from 1998 onwards) aware of the privacy and security risks that come with technology likely to appreciate anonymous communication and to take more care when managing their online reputation value independence, innovation, and creativity 🏋️ Practice\nThink about the people you work with, or the people in your social circle, who are from a different generation. Do you feel equally at ease with people much older or younger than yourself?\nPick someone from another generation that you have struggled to connect with in the past. Having read this chapter, do you think that age differences might contribute to the problem?\nIf so, your task today is to try relating to this person in a new way. Your next steps will depend on the situation.\n","date":"2023-01-27T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/21-days-of-effective-communication/cover_hu745844b16ceecb6f174d384a78d7eacb_31620_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/21-days-of-effective-communication/","title":"21 days of effective communication"},{"content":"Designing Your Life 做自己的生命設計師 講者（Discord ID）: kuouu 預計分享時長（min）: 10 誤解：學位決定未來的職涯走向 重構：3/4 的畢業生最後做的事情與他們的主修完全不相干\n誤解：成功之後就會很快樂 重構：真正的快樂源自於你正走在自己設計的人生道路上\n誤解：一切都太晚了 重構：設計你所愛的人生永遠不嫌晚\n本書運用設計思維在人生規劃上，並且透過*誤解（Dysfunctional Belief）以及重構（Reframe）*描述人在遇到困難時常見的想法，並且提出更好的點子來解決問題。\n作為設計師應該有的心態 保持好奇心：探索一切的可能性，讓整件事情好像在玩耍一樣 動手做：真的做出一個又一個的原型（雖然常常失敗），而不是只動腦想 重構問題：設計師卡住時，會確認他們是否正在對的方向上，重構問題也開啟了新解法的可能性 知道這只是一個過程：搞砸一切時，我們必須讓它過去。有時反而能從其中得到新想法！ 向人求助：最好的點子總是在合作當中產生，你嘗試與外界產生連結，外界勢必會有所回應 從你所在的地方出發 誤解：我應該要知道我該去哪 重構：在知道自己在哪裡之前，不可能知道自己該怎麼走\n在做任何規劃之前，知道自己的處境十分重要，了解自己對於生活當中滿意的地方，又或是不滿哪些事情。尤其是接下來練習當中的 健工玩愛量表(The Health Work Play / Love Dashboard) ，分別紀錄了四項對於人來說很基礎的指標，分別是 健康、工作 、玩樂、愛。當這些基礎所需被滿足時，人才會有足夠的能量去完成更遠大的自我實現。\n健工玩愛量表(The Health Work Play / Love Dashboard) 寫一些與對應指標有關內容的描述 評估你的分數（0 - 4） 想要解決哪些問題？ 這個問題是 重力問題 嗎？ 各項指標解釋：\n健康：身體與心靈上的健康都算，分別要占多少比例自己可以決定 工作：正職、副業、志工活動或是家庭主夫 / 婦 玩樂：任何你單純覺得好玩而去做的事情 愛：在你生活當中任何覺得被愛的瞬間 指標 分數 描述 健康 工作 玩樂 愛 🌍 重力問題（Gravity Problem）\n就像是重力存在在地球上一樣，沒有人能改變它。有時候遇到一些無力改變的問題時，我們得做的事情是去接受，並且根據這個情況研擬出最佳的解答。\n打造你的羅盤 三個問題：\n你的名字是什麼？ 你的人生課題是什麼？ 燕子在空中飛行的速度是多少？ 大多數人可以回答出其中兩個問題，但剩下來的那個問題可能就有點困難了。這個問題有點像是古希臘哲學家歷久不衰的疑問：我是誰、我的活著目的是什麼、為什麼這些事情很重要，而為了打造人生羅盤，我們也必須搞懂兩件事情——人生觀 與 工作觀。\n在不同的階段，人生觀與工作觀都會有所不同，但搞懂這些的重點並不是將它作為餘生的唯一指標，而是為現在的自己提供一個明確的方向。尤其是在完成時，你會發現兩個地方一定會有 一致性（像是熱愛環保的人，一定不會去製造污染的公司上班），而有一致性的人生將會滿足你在各個方面的需求，並且找到你的真北（True North）。\n工作觀 問題 回答 為什麼要工作？ 為了什麼工作？ 工作代表什麼？ 工作跟個人、他人、社會有什麼關係？ 如何定義好的工作？ 錢跟工作的關係是什麼？ 工作跟經驗、成長、自我實現有什麼關係？ 人生觀 題目 回答 我們為何在這裡？ 人生的意義是什麼？ 個人跟他人的關係是什麼？ 家人、城市、世界在其中扮演的角色是什麼？ 何謂善良？何謂邪惡？ 有更上層的力量、神明、抑或是任何超越的存在嗎？如果有的話，他對人生的影響是什麼？ 快樂、悲傷、正義、不公、愛、和平、紛爭在人生中扮演的角色是什麼？ 工作觀與人生觀的一致性 兩邊在什麼時候互補了？ 兩邊在什麼時候產生衝突？ 有任何一項驅動另外一項嗎？ 誤解：我應該要知道我該去哪\n重構：我永遠不知道我要去哪，但我知道我是否在對的路上\n找到你的道路 誤解：你不會在工作當中感受到愉悅，這就是為什麼他被稱作 工作\n重構：愉悅是一個幫助你找到適合你的工作的指標\n有了羅盤之後，我們可以知道自己是否在正確的方向上，但這不一定能帶我們走向正確的道路，畢竟它不是地圖。\n那我們該如何知道下一步該怎麼走呢？我們可以從 專注（engagement） 跟 活力（energy） 當中得出線索。接下來我們將使用 好時光日誌（Good Time Journal） 來找回我們對事物的熱情。\n好時光日誌 紀錄你生活中專注與充滿活力的時刻。\n同時，可以透過 AEIOU 觀察法來客觀記錄這件事情，並且反思是什麼帶給你熱情。\n活動（A，Activities）：你在做些什麼事？ 環境（E，Environments）：你在什麼地方？ 互動（I，Interactions）：當時互動的對象是什麼？人或機器？怎麼互動的？ 物品（O，Objects）：你是否使用了什麼工具或物品？ 使用者（U，Users）：旁邊有其他人嗎？ 延伸閱讀 → 記錄日常生活，自我探索的AEIOU法\n活動內容 專注程度 活力程度 反思 🧘 心流（Flow）：專注的最高境界\n完全的投入在其中 感到欣喜若狂 很清楚知道自己要做什麼 內心平靜 時間就像靜止一樣 延伸閱讀 → 心流理論 wiki\n不再卡關 誤解：噢不！我卡關了 重構：我永遠不會卡關，因為我總是可以想出很多解法\n在上個階段，我們找到了人生的 地圖，於是我們就從此暢通無阻了。\n才怪，真的下去走就會知道早晚會出事，而且有時候甚至問題一個接著一個🤦‍♂️\n我們會覺得卡關，或覺得自己失敗了，源自於沒有用設計師的思維去思考。設計師永遠不會只採用他的第一個點子，多幾個選項將有助於做出更好的選擇 —— 卡關的人則是鑽牛角尖在他想出的第一個解法。\n不要執著在你第一個點子，因為他通常極度平庸且缺乏創意。 在發想點子的過程中也不要做過多的批判，要相信你有能力得到你想要的（是真的）。\n總結 以上是 Designing Your Life 的前四章，當初是比較多是為了練英文閱讀＋自我探索看的，文章當中包含很多例子我都省略掉了，剩下的就比較偏練習，而且需要花費大量時間來完成。\n我覺得在練習過程中真的會有很多的反思，並且釐清些什麼。練習內容都不難，但真的動手去做超難。所以我盡量讓自己完成一章的練習再進入下一章節閱讀，然後就發現看不完了😅\n所以其實在自我探索部分我收穫的其實並沒有很多，但我在英文方面倒是認識了很多很酷的單字與用法，像是 ski bum，fixed-it guy（相反於創作者的名詞？）\n如果是成大的同學可以去修 史丹福微課程—對你來說，什麼是重要的？ 這堂課，可以完成書中超過一半的內容，而且還能找到夥伴一起發想點子\n其他人可以去買書，或是我偷偷把電子書（英文）連結放在 這邊，有機會可以來辦一個讀書會大家以起討論！\n","date":"2022-09-26T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/design-your-life/cover_hub21e49be472db7fe42a8d6ecce00d4d9_212202_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/design-your-life/","title":"Designing Your Life 做自己的生命設計師"},{"content":"Indistractable 專注力協定 講者（Discord ID）: kuouu 預計分享時長（min）: 10 🏛️ 坦塔洛斯（Tantalus）被他的父親宙斯懲罰，被驅逐到了冥府，在那裡，他發現自己在一池淺水中勉強地站立，身旁有一棵樹，樹上的果子已然熟透，在他頭上晃動著。這樣的詛咒感覺還滿慈悲的，但是每當坦塔洛斯試圖摘取果子，樹枝就會移開，永遠都搆不著；當他彎腰想喝口清涼的水時，水就會退去，所以他永遠無法止住飢渴。坦塔洛斯的懲罰就是永恆地渴望，卻永遠得不到。\n因此，當某個東西讓人極度渴望卻不可及的時候，我們將其形容為 tantalizing，這裡用的就是他的名字。\n目錄 管理內在誘因\n替具有引力的事騰出時間\n對付外在誘因，把他駭回去\n用協定來預防分心\n如何讓你的職場變得心無旁騖\n如何培養出心無旁騖的孩子\n如何擁有一段心無旁騖的關係\n附錄：《 專注力協定 》讀書會討論指南\n分心真正的原因 💡 就算我們以為自己是在追求愉悅感，但真正驅動我們的其實是，從渴求的痛苦中獲得解放的這種欲望。\n無聊 消極性偏差：比起正面或中性事件，負面的事件更容易受到更多注意 反芻思維：我們傾向一直去反覆回想不好的經驗 享樂適應：不管發生再好的事，滿足感很快的會降回基準線 解法 衝動衝浪（Surfing the Urge） 當快要被分心的衝動所控制的時候，去覺察當時的感受，並且像衝浪一樣，乘著感受的浪花——既不把它推開，也不必配合它——這會幫助我們對付衝動，直到這些感受退去。\n使用 衝動衝浪 技巧來把專注力放在渴望的感覺上，如果十分鐘過後，還是很想進行這個行為，那就做吧，但這幾乎不會發生。交界點已經過去了，我們能夠做我們真正想做的事。\n解法 將任務重新構思 我們之所以無法獲得趣味，是因為我們對待事情還『不夠』認真，而不是因為我們太認真嚴肅地對待工作，以至於我們需要用糖來去除其中苦澀。\n解法 改變對自己的想法 我們跟自己說了些什麼至關重要，替自己貼上缺乏自制力的標籤，的確會造成較低的自制力。不如告訴自己我們的失敗是因為我們就是不夠好，我們應該要更加疼惜自己，在我們經歷挫折時，寬容地對待自己。\n如何安排工作與時間 TodoList → 時間箱（Timeboxing） [生產力up]在對的時間做對的事情，就用時間箱（timeboxing）\n💡 目標是讓自己的行事曆上頭完全沒有空白，如此一來，你會擁有一個模板，讓你知道每一天想要如何去使用自己的時間。\n阻止那些讓你分心的事務 📧 電子郵件 1 2 T（花在電子郵件上的時間） = n（訊息總量） * t（每則訊息花費的時間） // 就像 TNT 一樣把我們一天的精心計劃告吹 減少 n：要減少收到的郵件，就必須要減少寄出的郵件 設立辦公時間，直接線上 or 線下同步討論 推遲發送的時間，使用電子郵件排程發送功能 減少 t：將重要性貼標籤，避免反覆查看電子信箱 👨‍👩‍👧‍👦 會議 組織人必須提前發送議程 與會者必須根據議程內容，提出幾個解決方案 盡量避免與會者使用電子產品 確保與會的每個人都是精挑細選，並且可以做出貢獻 📱 手機 刪除用不到的 app 關閉通知提示音、如果可以就關閉通知、關閉通知標記 重新排列桌面，讓主畫面只剩下最重要的 app 1 干擾程度：提示音 \u0026gt; 提示視窗 \u0026gt; 通知標記 💡 不怪大家被這些通知吸引，因為這種通知都是經過「行為研究」所精心設計出來的產物，讓你的大腦迅速得到反饋，進而被他的內容吸引。\n💻 桌面 💡 不意外地，當東西雜亂無章的時候，我們的大腦找起東西來更加艱難，同時這也讓每個圖示、頁籤或是每一條不必要的書籤條目都變成是一種指責，提醒著那些還沒做完或是有待思考的事情。有這麼多的外在誘因，很容易就會不經意地從手邊的事情上分心去點擊別的東西。\n將桌面清空 換上一個簡潔的桌布 → Indistractable 桌布 練習用搜尋功能來找要使用的應用程式（mac：⌘ + space / win：windows 鍵） 使用勿擾模式 / 專注輔助工具 🤝 各式動態消息推薦系統 請安裝以下兩種瀏覽器插件（only for 電腦）\nNews Feed Eradicator\nDF Tube (Distraction Free for YouTube™)\n專注力協定 🏛️ 尤里西斯協定 Ulysses Contract 在《奧德賽》的故事中，尤里西斯必須要帶著船員把船駛過賽蓮的海域，賽蓮的歌會魅惑人心，會吸引水手駛向自己，當水手靠近的時候，就會撞上賽蓮所在的海岸，岸邊礁石滿布，水手便命喪於此。 尤里西斯知道眼前的危險，便想了個聰明的計畫以避開宿命。他命令手下全員用蜂蠟堵住耳朵，這樣他們就聽不到賽蓮的呼喚了，所有人都遵守了尤里西斯的指示，除了他自己之外，他想要親自聽聽看賽蓮絕美的歌聲。 但是尤里西斯明白，他不是會被引誘把船駛向礁石，就是會為了接近賽蓮而躍入海中。為了要保護自己和他的手下，他命令船員將他綁在船的桅柱上，並且下了一道命令：無論他中間說了什麼或做了什麼，都不要替他鬆綁，也不要改變航向，直到船抵達安全的水域為止。船員們遵循了他的命令，當船駛過賽蓮所在的海岸時，他一時之間被她的歌聲所迷惑而變得瘋狂。盛怒中，他叫手下放他自由，但由於船員們既聽不到賽蓮的聲音，也聽不到船長的指示，他們安全地駛離了這片危險的海域。\n費力協定 費力協定會提高去執行這些多餘行為的難度，藉此來預防分心。\nForest: 專注森林（台灣 app，超級支持！）（雖然我沒有用🤣） 專注夥伴，讓你的分心變成社交上的壓力 真的找個人陪你一起專注 Focusmate.com 設定 iPhone 內建使用時間 代價協定 人們比起追求收益，會有更高的動力去迴避損失。\n跟朋友約定，如果沒做到 XXX ，就給他一萬元（相信你朋友一定很樂意幫你） ⚠️ - 避免約定超出自身能力太多的事情 \\\n盡量應用在短期任務（長期使用會讓做這件事情變得很負面）\\ 不適合過分苛求自己的人 身份協定 我們認為自己是誰，這樣的看法會影響我們做出哪些事，人們傾向做出符合身份認同的行為。\n給自己一個新稱號：心無旁騖者 透過 儀式 來增強身份認同 心得 這本書不只解答了我之前在 #運動健身趣 的問題，也提供了許多方法讓我能夠更專注在自己想要達成的目標上，讀完這本書我實際運用到的技巧有\n衝動衝浪：在吃完午餐很想睡覺的時候，多堅持十分鐘再動作 時間箱工作法：讓我有想要將行事曆填滿的慾望，空白的區域更是讓我知道哪些時間被浪費掉 重新整理手機與電腦頁面，現在不容易被各式通知吸引了！ 瀏覽器插件必裝，現在的推薦系統真的很可怕（YT 根本時間殺手） 身份協定，以及改變對自己的想法 在做了以上的改變之後，我發現我才真的會使用這些科技產物，包含手機電腦以及各式軟硬體。如果你也覺得自己很容易分心，或是想怪罪科技產品讓自己無法達成目標，不如就來看看這本書吧！\n💡 本人使用 hyread 閱讀電子書（於 台南圖書館 借閱），喜歡閱讀紙本也可以去實體書店購買。\n","date":"2022-09-26T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/indistractable/cover_hu4ca2099216425f5750308536a7f2ae1c_17059_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/indistractable/","title":"Indistractable 專注力協定"},{"content":"神啊！我不想再努力了，請直接告訴我成功的方法吧！（非宗教類） 講者（Discord ID）: kuouu 預計分享時長（min）: 5 這本書將「神」打造成一位俏皮可愛的老頭，解答各種我們在追求成功當中，各個階段可能遇到的問題。如果你也對未來有很多的疑問，甚至到想求神拜佛的情況，都很適合來翻翻這本書，尋找屬於你的解答！\n📋 書本大綱 神啊，其實我連自己想做什麼都不知道！ 神啊，我既沒有才能，也沒有天分！ 神啊，我嘗試了喜歡的事物，卻徹底失敗了！ 神啊，我心裡的負面情緒一直揮之不去！ 神啊，雖然事情發展得很順利，但我還是無法消除內心的擔憂！ 神啊，都已經走到現在這一步，我卻還是提不起勇氣去挑戰！ 🤔 誰適合讀這本書？ 推薦給這些人：\n不開心 正在迷惘中 有點不安、擔心、焦慮 不推薦的人（依舊能有所收穫但 CP 值不高）：\n排斥宗教主題 排斥心靈雞湯 對自己的生活很滿意、目標明確 🎮 第六感遊戲 植物種子即使沒有人去照顧他，他也會在最好的時機發芽。 所以說人如果也能順應生命的流動，事情也會進展的越來越順利。\n到一個同時有四部電梯的地方 猜猜看哪一部電梯會先到 對答案，感受你做出正確 / 錯誤答案時的感受 💡 當你心裡完完全全什麼都沒想的時候，不會受到思考的妨礙，第六感就會變好了。 當你達到了這樣的狀態，在你需要做決定的時候，你就可以立刻分辨哪個選擇是順應自己的意願，哪個決定只是在恐懼與擔憂下所做的選擇。\n💼 你適合哪種工作 你適合哪種工作型態？ 種類 優點 缺點 適合誰 公司員工 職權分明、受到組織保護 缺乏自由度 追求穩定的人 創業老闆 主導大型業務 對自己、公司、員工都得負責 喜歡挑戰的人 自由業 一切都由自己安排 責任都由自己承擔 崇尚自由的人 其他 … … … 你想要你的一天、一週、一月、一年是什麼樣子？ ex: 每天規律的起床、工作、吃飯、休息，一個月當中休息 4~5 天即可 ex: 工作休閒分明，工作一個整個月，然後休息一整個月 ex: 一個禮拜工作六小時，其他時間都在休息、玩樂 你想要有多少收入？ 你所需要的收入並不是用來向人炫耀的，而是要用來打造一個能讓你獲得充實感的環境。\n其實當你以 喜悅 為出發點時，金錢就會不斷朝你流過來了。\n你想要有怎樣的人際關係？ 做什麼事會讓你很滿足？（興趣） 你想要生活在怎樣的環境裡？ 💡 你可以不停更新你想要的樣貌。\n這並不是要規定你，而是為了讓你不會迷失方向，讓你能夠隨時確認怎樣的條件對你而言才是最好的。\n這只是一種讓你寫得開開心心的遊戲，雀躍不已地細數你的夢想；讓你變成小孩，用單純的心來做就好了。\n總結 是個很和藹可親的老頭，用盡心思想讓所有人都大獲成功，卻常常抱怨大家不懂他的一番苦心。\n有時候我們都會太勉強自己，去完成別人所期待的自己，但我們連自己想要什麼都不知道。而人只有在追求自己所期望的未來時，才能發揮出最大的潛力，也難怪這麼多人活得如此辛苦，內心卻越來越匱乏了。\n→ 找到自己的熱愛 → 確立目標 → 努力實現（但不要勉強） → 持續進步\n這就是書中所謂成功的方法，有興趣可以買（或是跟我借）來看看，裡面有更多更詳細的內容，最後送給各位一個貫穿全文的核心思想：\n💡 其實我們都已經具備大獲成功的所有要素了，而我們唯一要做的事情就是相信這件事。\n","date":"2022-08-26T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/omg/cover_hu0dbdec4eb274e0da59daf361e94f2260_130634_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/omg/","title":"神啊！我不想再努力了，請直接告訴我成功的方法吧！（非宗教類）"},{"content":"男人的愛情研究室：談一場不追不求的戀愛 講者（Discord ID）: kuouu#2631 預計分享時長（min）: 5 📋 書本大綱 你在感情中是什麼樣子？\n超越者：改變內在才能調整互動\n戀愛前該搞懂的事：戀愛模型\n降低得失心\n培育好感森林\n釋放意圖\n確認關係\n最後的故事\n💖 戀愛模型 好感：激情與火花 好感是一種最常見，也最容易和「喜歡」混淆的情感，如果你認識一個人不到五分鐘，內心就泛起莫名的好奇心想更瞭解對方，那八成是好感的作用。\n友好：輕鬆無壓的相處 友好與其說是一種情感，倒不如說它是個舒適的互動模式更來得貼切，友好是溫暖含蓄的，能讓不熟悉的人能感到安全，自由自在的暢所欲言，不必擔心會遭致歧視和批評，坦誠交流內心的想法。\n欣賞：「平等的」互相認同 在能夠互相欣賞的情侶之間，沒有一方會覺得自己高高在上，也沒有一方會覺得自己不如對方，那自然就不會有人變得高傲，也不會有人覺得自己委屈，他們在彼此的眼裡都是獨一無二的寶藏。\n⚠️ 崇拜 是一種最差勁的吸引方式，以崇拜為起點的感情往往難以持久，因為它是一種下對上的仰慕、粉絲對明星的迷戀，如空中樓閣般的情感，它需要倆人間保持一定的距離，才能在朦朧中發揮它的影響力，可是熱戀中的情侶，怎麼可能不進一步瞭解彼此？\n📐 評估你的戀愛模型 過去 / 現在的一段感情故事 好感 友好 欣賞 我跟他是在高中的活動認識的，他是一位很活潑的女孩，很容易和大家打成一片的那種。因緣際會下在露營活動跟他分到同一組，於是我們開始有了一點交集，我也有鼓起勇氣約他出來，但在活動結束之後就漸漸關係淡掉了，有點可惜。 ❤️❤️❤️ ✋✋✋✋ 💎💎 大學社團認識的女生，因為一起出去玩才變得比較熟，後來也有點曖昧。我們偶爾會約出來走走，特殊節日也會一起慶祝，但卻一直沒有更多的進展，這樣的狀況持續了一年，我們都很了解彼此，最後卻沒有在一起。 ❤️❤️❤️❤️❤️ ✋✋✋✋ 💎💎 工作上的夥伴，因為常常有公事上的事情要討論，所以有比較多的交集。原本沒想那麼多，在談論公事之餘，也會閒聊一些日常瑣事，偶爾也會通話聊天。過一陣子之後，他突然向我告白，因為身邊異性很少，讓我有點動搖，不知道該怎麼辦。 ❤️ ✋✋✋✋✋ 💎💎💎💎 🦋 花若盛開，蝴蝶自來。 你會看到，很多把這句話掛在嘴邊的人，他們養花的目的根本不是為了盛開，而是為了吸引蝴蝶。\n但你不同了，你知道讓花盛開的目的，只是為了花的本身，讓這朵花自己活得開心。\n你唯一要做的，就是問自己，是否活出了這朵花本身的生命，而有一天，自然會有屬於你的蝴蝶到來，你是錯過了你該錯過的，但你也得到了你該得到的。\n👉 延伸閱讀 交友軟體大補帖｜Annie 愛情急診室 EP.63 你知道嗎？你以為的喜歡不一定是喜歡 戀愛小測驗❤️看看你在戀愛中像什麼動物 ","date":"2022-08-17T00:00:00Z","image":"https://demo.stack.jimmycai.com/p/mans-love/cover_hu0813a816d2b146e294525e60104c614d_302773_120x120_fill_box_smart1_3.png","permalink":"https://demo.stack.jimmycai.com/p/mans-love/","title":"男人的愛情研究室：談一場不追不求的戀愛"},{"content":"Spark AR Studio 新手教學 版本號：Spark AR Studio V125\n介面介紹 Scene (左上)：所有在中央畫面上出現的物件都可以在這裡被選取 Assets (左下)：使用或沒使用到的素材 Properties (右側)：所選取物件的屬性 (大小、位置 左側垂直工具列： Workspace：一些被隱藏的工作區域 Video：選擇手機模擬器出現的人，或使用電腦鏡頭 Test on device：會把測試連結傳到登入的帳號 Upload and Export：上傳 Spark AR Hub 跟匯出專案檔 中央畫面：左鍵選取物件、按住右鍵拖拉改變視角、滾輪縮放 上方三個按鈕：分別代表移動所選取物件的位置、角度、大小 物件 (Object) 介紹 新增物件：Scene 跟 Assets 中間有個 ＋Add Object，或是在你想加東西的地方按右鍵新增 (注意物件的層級)\nfaceTracker 用來偵測臉部的物件，可以在它下方加子物件 (ex：臉部裝飾、平面、3D 物件) 來達到讓東西跟著臉部一起動的效果，因此大多數 IG 濾鏡都會用到它。\nFace Mesh 類似於面具的物件，大多會放在 faceTracker 之下，可以用來做美肌效果 (retouch)、化妝、臉部彩繪等。\nPlane 一個平面，放在 faceTracker 之下可以用來做隨機選擇器的平面，或擺放任何需要跟著頭部動作的圖片。\n物件的外觀 —— Material \u0026amp; Texture 新增一個物件在濾鏡中是不會顯示任何東西的，儘管在 Spark AR Studio 中會有黑白底作為提示，可是實際上那會是透明的！\n我們需要給物件一層皮，也就是 Material (素材)\n但 Material 預設會是灰色的，也不太可能是我們要的結果。因此我們還需要將我們想要的圖片貼上，也就是 Texture (質地)\n雙擊剛剛做的 material0 進去，右側版面看到 Shader Properties \u0026gt; Texture，選擇 New Texture 並匯入要用到的圖片檔。\nMaterial 與 Texture 都會放在左下方工作區，建議要將他個別命名，不然當東西一多起來看縮圖會看到眼睛脫窗\n測試及上傳 Spark AR Hub 中間那個按鈕可以讓你先在手機上測試，而下面的按鈕就是上傳 Spark AR Hub 了。\nSpark AR Hub 是管理該帳號內所有濾鏡的平台，提交審查動作必須在那裡完成。此外，那裡還可以編輯濾鏡資訊、觀看使用次數等，可以自己去看看還有什麼可以操作的地方。\n提交審查所需要的東西有：\n濾鏡名稱及 icon 範例影片 濾鏡發佈排程 類別、關鍵字 (選填) 然後注意他有一堆規範，如果不小心違反了就得重新提交審查，有夠麻煩= =\n濾鏡實作 —— 成大競爭力 ![](https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2c321cc4-a19d-4f0f-a1c9-bf9509a07db1%2FScreenshot_20210203_050415_com.facebook.orca.jpg?table=block\u0026id=be135b7f-23ce-4375-9b70-cd87c3ce15b3\u0026width=3070\u0026userId=7af45ef0-62e9-49d2-a2aa-35ff33d00963\u0026cache=v2 =200x)\n「遠見」率先公布「2021企業最愛大學生排行榜」，成大創下此一調查的七連霸，台大蟬聯亞軍，第三、四、五名分別為台科大、清大、交\u0026hellip;\n👉 素材下載區 👈\n可以先想想這個濾鏡大概用了什麼物件再下去做，圖片中可以看到臉上有兩個印章、頭上有字、美肌，且都會跟著頭部轉動\n臉上的印章 → faceMesh 美肌 → faceMesh 頭上的字 → plane 跟著頭轉 → faceTracker 根據上面觀察，這個濾鏡的架構如下 (注意縮排的關係)：\n1 2 3 4 - faceTracker - faceMesh (美肌) - faceMesh (印章) - plane (文字) 事不宜遲，那就先加個 faceTracker 到 Scene 裡面吧！\n美肌 (retouch) 新增完 faceTracker 之後，我們先來做濾鏡幾乎必備的美肌 (retouch) 吧！\n右鍵點擊 faceTracker 並新增一個 faceMesh，並在 faceMesh 中新增一個 material ，並雙擊進入 material0 中。\nmaterial 中最上方應該會有一個屬性叫做 Shader Type，選擇 Retouching\n如果需要，下方的 Skin Smoothing 可以調整美肌強度。\n那我們就完成第一步了，耶！😆\n印章 (臉部彩繪) 接下來處理印章的部分，但其實跟上方 物件的外觀 —— Material \u0026amp; Texture 提到的一樣，按照新增 faceMesh → 新增 material → 匯入圖片檔即可完成。\n但電腦儲存的圖片都是平面且為四邊形，臉卻是立體且不規則的，這樣直接匯入圖片沒問題嗎？\n於是官方提供了兩種圖片給我們做臉部彩繪的參考 (其實還有分男女，所以是 4 種)：\n這次我們使用左邊的來處理，打開你任何可以編輯圖片的軟體，然後開始在你的臉上作畫，儲存完就可以安心的把圖片匯入了！\n阿然後記得把底圖給隱藏或刪除R\n於是我們完成了印章，也就是臉部彩繪的部分，接下來把文字放進來就完成了！\n文字 (plane、位置大小調整) 新增物件跟上面印章的操作很像，就差在新增不同種類的東西而已，這次我們要新增的是一個平面 (plane)，然後按照上面提到的流程將圖片匯入\n這時候你會發現：他的大小跟位置都不是我要的！\n點擊 Scene 中的 plane0 之後，調整方法可以有兩種：\n點擊正中央工作區的正上方三個按鈕，由左至右分別是調位置、角度、大小，利用物件上的箭頭來改變他的值。 右側工作區有個 Transformations 的屬性，由上至下分別代表位置、大小、角度。 第一個方法調比較直觀，第二個則是能調的比較細微。\n調完之後濾鏡基本上是完成了，測試確定沒問題之後點擊上傳 Spark AR Hub 等他審查過了之後就大功告成啦，恭喜你！\n👉 濾鏡成品（要用手機開啟） 👈\n參考資料及素材來源 印章產生器 線上手寫字體產生器 Face Assets (點擊即下載) ","date":"2021-02-03T00:00:00Z","image":"https://i.imgur.com/ixYuWA2.png","permalink":"https://demo.stack.jimmycai.com/p/spark-ar-tutorial/","title":"Spark AR Studio 新手教學"}]